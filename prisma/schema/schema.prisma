generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
    ADMIN
    USER
}

model user {
    id          String     @id @default(uuid()) @db.Uuid
    email       String     @unique @db.VarChar
    password    String      
    role        Role       @default(USER)
    nickname    String     @unique

    created_at  DateTime   @db.Timestamptz @default(now())
    updated_at  DateTime   @updatedAt
    deleted_at  DateTime?  @db.Timestamptz

    bbs_post    bbs_post[]

    bbs_comments bbs_comments[]
}

model bbs_post {
    id          String      @id @default(uuid()) @db.Uuid
    title       String      @db.VarChar(255)
    content     String      @db.Text

    created_at  DateTime    @db.Timestamptz
    updated_at  DateTime    @updatedAt
    deleted_at  DateTime?   @db.Timestamptz

    user        user        @relation(fields: [user_id], references: [id], onDelete: Cascade)
    user_id     String      @db.Uuid

    comments bbs_comments[]

    @@index([created_at])
}

model bbs_comments {
    id                String          @id @default(uuid()) @db.Uuid
    content           String          @db.Text

    created_at        DateTime        @db.Timestamptz
    updated_at        DateTime        @updatedAt
    deleted_at        DateTime?       @db.Timestamptz

    user              user            @relation(fields: [user_id], references: [id], onDelete: Cascade)
    user_id           String          @db.Uuid

    post              bbs_post        @relation(fields: [post_id], references: [id], onDelete: Cascade)
    post_id           String          @db.Uuid

    parent            bbs_comments?   @relation("parent_child", fields: [parent_id], references: [id], onDelete: Cascade)
    parent_id         String?         @db.Uuid

    children          bbs_comments[]  @relation("parent_child")


    @@index([post_id, parent_id, created_at])
}
